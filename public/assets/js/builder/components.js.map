{"version":3,"sources":["mainComponent.js","rg-modules/rg-edm-rich-text-editor-module.js","core/edmComponent/edmComponent.js","core/component/component.js","core/bannerComponent/bannerComponent.js","core/imageBulletComponent/imageBulletComponent.js","core/imageParaComponent/imageParaComponent.js","core/richTextComponent/richTextComponent.js","core/textComponent/textComponent.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"components.js","sourcesContent":["angular.module('app.components',[]);\r\n","angular.module('rgEdmRichTextEditor.module', [ 'colorpicker.module'])\r\n.directive('rgEdmRichTextEditor', function ($interval, $window, $compile) {\r\n\treturn {\r\n\t\trestrict: \"A\",\r\n\t\trequire: '^ngModel',\r\n\t\tscope: {},\r\n\t\tlink: function(scope, elem, attrs, ngModel) {\r\n\r\n\t\t\tscope.edm = {};\r\n\r\n\t\t\tscope.edm.foreColor = \"#000000\";\r\n\t\t\tscope.edm.backColor = \"#ffffff\";\r\n\t\t\tscope.edm.createLink = \"http://\";\r\n\r\n\t\t\tscope.$watch('edm.foreColor', function(val) {\r\n\t\t\t\tscope.edm.formatSelection('foreColor', false, val)\r\n\t\t\t});\r\n\r\n\t\t\tscope.$watch('edm.backColor', function(val) {\r\n\t\t\t\tscope.edm.formatSelection('backColor', false, val)\r\n\t\t\t});\r\n\r\n\t\t\tscope.$watch('edm.createLink', function(val) {\r\n\t\t\t\tscope.edm.formatSelection('createLink', false, val);\r\n\t\t\t});\r\n\r\n\t\t\tvar stop = $interval(function() {\r\n\t\t\t\tngModel.$setViewValue(editor.body.innerHTML);\r\n\t\t\t}, 500);\r\n\r\n\t\t\telem.on('$destroy', function() {\r\n\t\t\t\tscope.stopInterval();\r\n\t\t\t});\r\n\r\n\t\t\tscope.stopInterval = function() {\r\n        if (angular.isDefined(stop)) {\r\n          $interval.cancel(stop);\r\n          stop = undefined;\r\n        }\r\n      };\r\n\r\n\t\t\telem.jhtmlareaObject = this;\r\n\r\n      var textarea = this.textarea = $(elem);\r\n      // var container = this.container = $(\"<div/>\").addClass(\"jHtmlArea\").width(textarea.width()).insertAfter(textarea);\r\n      var container = this.container = $(\"<div/>\").addClass(\"jHtmlArea\").width(\"100%\").insertAfter(textarea);\r\n\r\n      var toolbar = this.toolbar = $(\"<div/>\").addClass(\"ToolBar\").appendTo(container);\r\n      toolbar.html($compile('<style>.jHtmlArea.fullScreen { bottom: 0; top: 0; left: 0; right: 0; position: fixed; background: #fff; } .jHtmlArea.fullScreen iframe { height: 100%; }</style><div class=\"btn-group\"> <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'bold\\', false, null);\"> <span class=\"glyphicon glyphicon-bold\"></span> </button> <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'italic\\', false, null);\"> <span class=\"glyphicon glyphicon-italic\"></span> </button> <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'underline\\', false, null);\"> <u><b>U</b></u> </button> <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'strikeThrough\\', false, null);\"> <strike>S</strike> </button> <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'strikeThrough\\', false, null);\"> <span class=\"glyphicon glyphicon-font\"></span> </button> <div class=\"btn-group\"> <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <span class=\"glyphicon glyphicon-text-color\"></span> </button> <ul class=\"dropdown-menu\"> <li> <a href=\"javascript:void(0);\"> <input type=\"text\" data-ng-model=\"edm.foreColor\" colorpicker> </a> </li></ul> </div><div class=\"btn-group\"> <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <span class=\"glyphicon glyphicon-text-background\"></span> </button> <ul class=\"dropdown-menu\"> <li> <a href=\"javascript:void(0);\"> <input type=\"text\" data-ng-model=\"edm.backColor\" colorpicker> </a> </li></ul> </div><div class=\"btn-group\"> <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <span class=\"glyphicon glyphicon-link\"></span> </button> <ul class=\"dropdown-menu\"> <li> <a href=\"javascript:void(0);\"> <input type=\"text\" data-ng-model=\"edm.createLink\"> </a> </li></ul> </div><button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.formatSelection(\\'unlink\\', false, null);\"> <span class=\"glyphicon glyphicon-remove\"></span> </button><button type=\"button\" class=\"btn btn-default\" data-ng-click=\"edm.toggleFullScreen();\" id=\"fullScreenTButton\"> <span class=\"glyphicon glyphicon-fullscreen\"></span> </button> </div>')(scope));\r\n\r\n      // var iframe = this.iframe = $(\"<iframe/>\").height(textarea.height());\r\n\t\t\t// iframe.width(textarea.width());\r\n      var iframe = this.iframe = $(\"<iframe/>\");\r\n      // iframe.height(\"96%\");\r\n      iframe.width(\"96%\");\r\n\r\n      var htmlarea = this.htmlarea = $(\"<div style='height: calc(100% - 30px);' />\").append(iframe);\r\n\r\n      container.append(htmlarea).append(textarea.hide());\r\n\r\n\t\t\tvar edit = this.editor = this.iframe[0].contentWindow.document;\r\n      edit.designMode = 'on';\r\n      edit.open();\r\n      edit.write(ngModel.$viewValue);\r\n      edit.close();\r\n\r\n\t\t\tscope.edm.formatSelection = function(a, b, c) {\r\n\t\t\t\t// iframe[0].contentWindow.focus();\r\n\t\t\t\t// console.log(iframe[0].contentDocument.defaultView.getSelection().toString());\r\n\t\t\t\tvar elem = iframe[0].contentDocument.defaultView.getSelection().getRangeAt(0).cloneContents();\r\n\t\t\t\tconsole.log($(\"<p/>\").append($(elem)).html());\r\n\t\t\t\t$(editor).find('a').attr('target', '_blank');\r\n\t\t\t\teditor.execCommand(a, b, c);\r\n\r\n\t\t\t};\r\n\r\n\t\t\tscope.edm.toggleFullScreen = function() {\r\n\t\t\t\t$(\"#fullScreenTButton\").find(\"span\").toggleClass(\"glyphicon-fullscreen glyphicon-resize-small\");\r\n\t\t\t\t$(\".jHtmlArea\").toggleClass(\"fullScreen\");\r\n\t\t\t};\r\n\r\n\t\t\tngModel.$render = function () {\r\n\t\t\t\teditor.body.innerHTML = ngModel.$viewValue;\r\n\t\t\t};\r\n    }\r\n  }\r\n});\r\n","angular.module('app.components').directive('rgedmEdmComponent', edmComponent);\r\n\r\nfunction edmComponent() {\r\n    return {\r\n        scope : {\r\n          edm: '='          \r\n        },\r\n        transclude    : true,\r\n        replace       : true,\r\n        templateUrl   : getTemplateURL(\"/components/core/edmComponent/edmComponent.html\"),\r\n        link          : edmComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction edmComponentLinkFunction(scope, elem, attrs) {\r\n  elem.bind('click', function() {\r\n    // scope.edm.showProperties('<edm-component-properties></edm-component-properties>');\r\n    // return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmEdmComponentProperties', edmComponentProperties);\r\n\r\nfunction edmComponentProperties() {\r\n    return {\r\n        templateUrl   : getTemplateURL(\"/components/core/edmComponent/edmComponentProperties.html\"),\r\n    }\r\n}\r\n","angular.module('app.components').directive('rgedmComponent', component);\r\n\r\nfunction component() {\r\n    return {\r\n        scope: {\r\n          c: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        link          : componentLinkFunction\r\n    }\r\n}\r\n\r\nfunction componentLinkFunction(scope, elem, attrs) {\r\n  var directiveName = scope.c.directiveName;\r\n  var html = scope.edm.doCompile(scope, directiveName);\r\n  elem.append(html);\r\n  elem.bind('click', function() {\r\n    // scope.edm.showProperties('<edm-component-properties></edm-component-properties>');\r\n    // return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmComponentProperties', componentProperties);\r\n\r\nfunction componentProperties() {\r\n    return {\r\n        templateUrl   : getTemplateURL(\"/components/core/component/componentProperties.html\"),\r\n    }\r\n}\r\n","angular.module('app.components').directive('rgedmBannerComponent', bannerComponent);\r\n\r\nfunction bannerComponent() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        templateUrl   : getTemplateURL(\"/components/core/bannerComponent/bannerComponent.html\"),\r\n        link          : bannerComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction bannerComponentLinkFunction(scope, elem, attrs) {\r\n  elem.bind('click', function() {\r\n    $(\".edm-component\").removeClass(\"active\");\r\n    elem.addClass(\"active\");\r\n    var propertiesTemplate = '<rgedm-banner-component-properties edm=\"edm\" id=\"' + attrs.id + '\"></rgedm-banner-component-properties>';\r\n    scope.edm.showProperties(propertiesTemplate);\r\n    return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmBannerComponentProperties', bannerComponentProperties);\r\n\r\nfunction bannerComponentProperties() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        templateUrl   : getTemplateURL(\"/components/core/bannerComponent/bannerComponentProperties.html\"),\r\n    }\r\n}\r\n","angular.module('app.components').directive('rgedmImageBulletComponent', imageBulletComponent);\r\n\r\nfunction imageBulletComponent() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        templateUrl   : getTemplateURL(\"/components/core/imageBulletComponent/imageBulletComponent.html\"),\r\n        link          : imageBulletComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction imageBulletComponentLinkFunction(scope, elem, attrs) {\r\n  elem.bind('click', function() {\r\n    $(\".edm-component\").removeClass(\"active\");\r\n    elem.addClass(\"active\");\r\n    var propertiesTemplate = '<rgedm-image-bullet-component-properties edm=\"edm\" id=\"' + attrs.id + '\"></rgedm-image-bullet-component-properties>';\r\n    scope.edm.showProperties(propertiesTemplate);\r\n    return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmImageBulletComponentProperties', imageBulletComponentProperties);\r\n\r\nfunction imageBulletComponentProperties() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        templateUrl   : getTemplateURL(\"/components/core/imageBulletComponent/imageBulletComponentProperties.html\"),\r\n        link          : rgedmImageBulletComponentPropertiesFunction\r\n    }\r\n}\r\n\r\nfunction rgedmImageBulletComponentPropertiesFunction(scope, elem, attrs) {\r\n  var s = scope;\r\n\r\n  // Add Point\r\n  $('.add-point').click(function() {\r\n    var id = $(this).data(\"id\");\r\n    var point = {\r\n      \"fontFamily\": \"Arial\",\r\n      \"fontColor\": \"#ffffff\",\r\n      \"fontSize\": 16,\r\n      \"content\": \"Point\"\r\n    };\r\n    s.edm.components[id].bulletProperties.push(point);\r\n    s.$apply();\r\n  });\r\n\r\n  // Delete Point\r\n  $('body').on('click', '.delete-point', function() {\r\n    var id = $(this).data(\"id\");\r\n    var index = $(this).data(\"index\");\r\n    alert('delete-point: id = '+ id);\r\n\r\n    s.edm.components[id].bulletProperties.splice(index, 1);\r\n    s.$apply();\r\n  });\r\n}\r\n","angular.module('app.components').directive('rgedmImageParaComponent', imageParaComponent);\r\n\r\nfunction imageParaComponent() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        templateUrl   : getTemplateURL(\"/components/core/imageParaComponent/imageParaComponent.html\"),\r\n        link          : imageParaComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction imageParaComponentLinkFunction(scope, elem, attrs) {\r\n  elem.bind('click', function() {\r\n    $(\".edm-component\").removeClass(\"active\");\r\n    elem.addClass(\"active\");\r\n    var propertiesTemplate = '<rgedm-image-Para-component-properties edm=\"edm\" id=\"' + attrs.id + '\"></rgedm-image-Para-component-properties>';\r\n    scope.edm.showProperties(propertiesTemplate);\r\n    return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmImageParaComponentProperties', imageParaComponentProperties);\r\n\r\nfunction imageParaComponentProperties() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        templateUrl   : getTemplateURL(\"/components/core/imageParaComponent/imageParaComponentProperties.html\"),\r\n        link          : rgedmImageParaComponentPropertiesFunction\r\n    }\r\n}\r\n\r\nfunction rgedmImageParaComponentPropertiesFunction(scope, elem, attrs) {\r\n  // var s = scope;\r\n  //\r\n  // // Add Point\r\n  // $('.add-para').click(function() {\r\n  //   var id = $(this).data(\"id\");\r\n  //   var point = {\r\n  //     \"fontFamily\": \"Arial\",\r\n  //     \"fontColor\": \"#ffffff\",\r\n  //     \"fontSize\": 16,\r\n  //     \"content\": \"Point\"\r\n  //   };\r\n  //   s.edm.components[id].ParaProperties.push(point);\r\n  //   s.$apply();\r\n  // });\r\n  //\r\n  // // Delete Point\r\n  // $('body').on('click', '.delete-point', function() {\r\n  //   var id = $(this).data(\"id\");\r\n  //   var index = $(this).data(\"index\");\r\n  //   alert('delete-point: id = '+ id);\r\n  //\r\n  //   s.edm.components[id].ParaProperties.splice(index, 1);\r\n  //   s.$apply();\r\n  // });\r\n}\r\n","angular.module('app.components').directive('rgedmRichTextComponent', richTextComponent);\r\n\r\nfunction richTextComponent() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        templateUrl   : getTemplateURL(\"/components/core/richTextComponent/richTextComponent.html\"),\r\n        link          : richTextComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction richTextComponentLinkFunction(scope, elem, attrs) {\r\n  elem.bind('click', function() {\r\n    $(\".edm-component\").removeClass(\"active\");\r\n    elem.addClass(\"active\");\r\n    var propertiesTemplate = '<rgedm-rich-text-component-properties edm=\"edm\" id=\"' + attrs.id + '\"></rgedm-rich-text-component-properties>';\r\n    scope.edm.showProperties(propertiesTemplate);\r\n    return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmRichTextComponentProperties', richTextComponentProperties);\r\n\r\nfunction richTextComponentProperties() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        templateUrl   : getTemplateURL(\"/components/core/richTextComponent/richTextComponentProperties.html\"),\r\n    }\r\n}\r\n","angular.module('app.components').directive('rgedmTextComponent', textComponent);\r\n\r\nfunction textComponent() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        replace: true,\r\n        templateUrl   : getTemplateURL(\"/components/core/textComponent/textComponent.html\"),\r\n        link          : textComponentLinkFunction\r\n    }\r\n}\r\n\r\nfunction textComponentLinkFunction(scope, elem, attrs) {\r\n\r\n  elem.bind('click', function() {\r\n    $(\".edm-component\").removeClass(\"active\");\r\n    elem.addClass(\"active\");\r\n    var propertiesTemplate = '<rgedm-text-component-properties edm=\"edm\" id=\"' + attrs.id + '\"></rgedm-text-component-properties>';\r\n    scope.edm.showProperties(propertiesTemplate);\r\n    return false;\r\n  });\r\n}\r\n\r\n//--------------------------------\r\n//=> Component Properties\r\n//--------------------------------\r\n\r\n\r\nangular.module('app.components').directive('rgedmTextComponentProperties', textComponentProperties);\r\n\r\nfunction textComponentProperties() {\r\n    return {\r\n        scope: {\r\n          id: '=',\r\n          edm: '='\r\n        },\r\n        templateUrl   : getTemplateURL(\"/components/core/textComponent/textComponentProperties.html\"),\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}